#!/usr/bin/env bash

# Author: Josenilson Ferreira da Silva
# Date: August 2024
# License: GNU General Public License v3.0

#!/usr/bin/env bash

# Author: Josenilson Ferreira da Silva
# Date: August 2024
# License: GNU General Public License v3.0

# Calls the message function
source ./src/default_message

TRIGGER_TOKEN=glptt-a55a9661f9040b469b37ce7f84ce9983878bf7e6
set -e

# Define variables
command="$1"  # Option to be passed as the first argument
platform="$2"  # Platform option to be passed as the second argument

# Request project information
echo -e "To GitHub - \033[36mEnter the\033[0m  'Name' \033[36mrepository\033[0m"
echo -e "To GitLab - \033[36mEnter the\033[0m  'Id' \033[36mrepository\033[0m"
echo -e "To Salsa - \033[36mEnter the\033[0m  'Id' \033[36mrepository\033[0m"
read -p "$(echo -e '\033[1;33mEnter the project information \033[0m(\033[1;94mName or ID\033[0m) according to the platform: ')" project_id
read -p "$(echo -e '\033[1;33mEnter the reference name (branch or tag): \033[0m')" ref_name
read -p "$(echo -e '\033[1;33mEnter the job ID: \033[0m')" job_id
echo -e "\n\033[32mIf you don't have a token, you can generate it:\n\033[1;34m(Settings > CI/CD > Pipeline Trigger Tokens)\033[0m"
read -p "$(echo -e '\033[1;33mEnter your trigger token: \033[0m')" TRIGGER_TOKEN

# Define functions for each platform
trigger_github_pipeline() {
  echo -e "Triggering GitHub pipeline..."
  
  # GitHub API endpoint for re-running a job
  response=$(curl --silent --write-out "%{http_code}" --output /tmp/curl_response.json --request POST \
    --header "Accept: application/vnd.github+json" \
    --header "Authorization: Bearer $TRIGGER_TOKEN" \
    --header "X-GitHub-Api-Version: 2022-11-28" \
    "https://api.github.com/repos/$project_id/actions/jobs/$job_id/rerun")

  # Check if the response code is in the 200 range (success)
  if [[ "$response" -ge 200 && "$response" -lt 300 ]]; then
    echo -e "\033[1;32mGitHub repository $project_id job $job_id successfully re-run\033[0m"
  else
    case "$response" in
      400)
        echo -e "\033[1;31mGitHub: Bad request - check the parameters.\033[0m"
        ;;
      401)
        echo -e "\033[1;31mGitHub: Unauthorized - invalid token or credentials.\033[0m"
        ;;
      404)
        echo -e "\033[1;31mGitHub: Job not found or incorrect URL.\033[0m"
        ;;
      500)
        echo -e "\033[1;31mGitHub: Server error - try again later.\033[0m"
        ;;
      *)
        echo -e "\033[1;31mGitHub: Unknown error occurred. Response code: $response\033[0m"
        ;;
    esac
    exit 1
  fi
}

trigger_gitlab_pipeline() {
  echo -e "Triggering GitLab pipeline..."
  
  response=$(curl --silent --write-out "%{http_code}" --output /tmp/curl_response.json --request POST \
    --form "token=$TRIGGER_TOKEN" \
    --form "ref=$ref_name" \
    "https://gitlab.com/api/v4/projects/$project_id/trigger/pipeline")

  if [[ "$response" -ge 200 && "$response" -lt 300 ]]; then
    pipeline_id=$(jq -r '.id' /tmp/curl_response.json)
    echo -e "\033[1;32mGitLab project $project_id pipeline successfully triggered, No. $pipeline_id\033[0m"
  else
    case "$response" in
      400)
        echo -e "\033[1;31mGitLab: Bad request - check the parameters.\033[0m"
        ;;
      401)
        echo -e "\033[1;31mGitLab: Unauthorized - invalid token or credentials.\033[0m"
        ;;
      404)
        echo -e "\033[1;31mGitLab: Project not found or incorrect URL.\033[0m"
        ;;
      500)
        echo -e "\033[1;31mGitLab: Server error - try again later.\033[0m"
        ;;
      *)
        echo -e "\033[1;31mGitLab: Unknown error occurred. Response code: $response\033[0m"
        ;;
    esac
    exit 1
  fi
}

trigger_salsa_pipeline() {
  echo -e "Triggering Salsa pipeline..."

  response=$(curl --silent --write-out "%{http_code}" --output /tmp/curl_response.json --request POST \
    --form "token=$TRIGGER_TOKEN" \
    --form "ref=$ref_name" \
    "https://salsa.debian.org/api/v4/projects/$project_id/trigger/pipeline")

  if [[ "$response" -ge 200 && "$response" -lt 300 ]]; then
    pipeline_id=$(jq -r '.id' /tmp/curl_response.json)
    echo -e "\033[1;32mSalsa project $project_id pipeline successfully triggered: $pipeline_id\033[0m"
  else
    case "$response" in
      400)
        echo -e "\033[1;31mSalsa: Bad request - check the parameters.\033[0m"
        ;;
      401)
        echo -e "\033[1;31mSalsa: Unauthorized - invalid token or credentials.\033[0m"
        ;;
      404)
        echo -e "\033[1;31mSalsa: Project not found or incorrect URL.\033[0m"
        ;;
      500)
        echo -e "\033[1;31mSalsa: Server error - try again later.\033[0m"
        ;;
      *)
        echo -e "\033[1;31mSalsa: Unknown error occurred. Response code: $response\033[0m"
        ;;
    esac
    exit 1
  fi
}

# Executes command based on the platform provided
case "$platform" in
  github)
    trigger_github_pipeline
    ;;
  gitlab)
    trigger_gitlab_pipeline
    ;;
  salsa)
    trigger_salsa_pipeline
    ;;
  *)
    echo "Unsupported platform. Use 'github', 'gitlab', or 'salsa'."
    exit 1
    ;;
esac
