#!/usr/bin/env bash

# Author: Josenilson Ferreira da Silva
# Date: August 2024
# License: GNU General Public License v3.0

set -e

export PLATFORM
export USERNAME
export TOKEN

# Calls the message function
source ./src/default_message

# to show platform options
show_platform_options() {
    echo -e "\e[31;1mChoose a platform:\e[0m"
    echo -e "\e[34;1m1) GitHub\e[0m"
    echo -e "\e[34;1m2) GitLab\e[0m"
    echo -e "\e[34;1m3) Salsa\e[0m"
}

# Show platform options and get user input
show_platform_options
read -r -p "$(echo -e '\033[1;33mChoose the platform (1-3): \033[0m')" PLATFORM
read -r -p "$(echo -e '\033[1;33mWhat is the name of the repository owner? \033[0m')" USERNAME

# User prompts
read -r -p "$(echo -e '\033[1;33mEnter the name of the repository you want to create: \033[0m')" repo_name
read -r -p "$(echo -e '\033[1;33mRepository type (1: Public or 2: Private): \033[0m')" repo_type

# Set visibility based on user input
if [ "$repo_type" == "1" ]; then
    visibility="public"
elif [ "$repo_type" == "2" ]; then
    visibility="private"
else
    echo "Invalid repository type!"
    exit 1
fi

# Remote repository creation
case $PLATFORM in
    1)
        PLATFORM=GitHub
        read -r -p "$(echo -e '\033[1;33mEnter your GitHub access token: \033[0m')" TOKEN
        repository_search_message
        response=$(curl -s -H "Authorization: token $TOKEN" \
              -d "{\"name\":\"$repo_name\",\"private\":$([ "$visibility" == "private" ] && echo true || echo false)}" \
              https://api.github.com/user/repos)


        if echo "$response" | jq -e '.id' > /dev/null; then
            create_repository_successfully
            platform_host="github.com"
            remote_url="git@github.com:$USERNAME/$repo_name.git"
            echo "Remote URL: $remote_url"
        else
            failed_create_repository
            echo "Error details: $response"  # Mostrar detalhes do erro
            exit 1
        fi

        ;;
    2)
        PLATFORM=GitLab
        read -r -p "$(echo -e '\033[1;33mEnter your GitLab access token: \033[0m')" TOKEN
        repository_search_message
        response=$(curl -s --request POST --form "name=$repo_name" \
              --form "visibility=$visibility" \
              --header "PRIVATE-TOKEN: $TOKEN" \
              "https://gitlab.com/api/v4/projects")

        if echo "$response" | jq -e '.id' > /dev/null; then
            create_repository_successfully
            platform_host="gitlab.com"
            remote_url="git@gitlab.com:$USERNAME/$repo_name.git"
        else
            failed_create_repository
            exit 1
        fi
        ;;
    3)
        PLATFORM=Salsa
        read -r -p "$(echo -e '\033[1;33mEnter your GitHub access token: \033[0m')" TOKEN
        repository_search_message
        response=$(curl -s --request POST --form "name=$repo_name" \
              --form "visibility=$visibility" \
              --header "PRIVATE-TOKEN: $TOKEN" \
              "https://salsa.debian.org/api/v4/projects")

        if echo "$response" | jq -e '.id' > /dev/null; then
            create_repository_successfully
            platform_host="salsa.debian.org"
            remote_url="git@salsa.debian.org:$USERNAME/$repo_name.git"
        else
            failed_create_repository
            exit 1
        fi
        ;;
    *)
        platform_invalid
        exit 1
        ;;
esac

# Export variables
export platform_host
export repo_name
export remote_url

# Call external script to create LICENSE file
./src/license_repo --license-local --send

echo "Repository setup complete."
